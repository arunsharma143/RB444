@model IEnumerable<RB444.Data.Entities.Logo>
@{
    ViewData["Title"] = "LogoImages";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<style>
    .image-input {
        position: relative;
        display: inline-block;
        border-radius: 0.42rem;
        background-repeat: no-repeat;
        background-size: cover;
    }

        .image-input .image-input-wrapper {
            width: 120px;
            height: 120px;
            border-radius: 0.42rem;
            background-repeat: no-repeat;
            background-size: cover;
        }

        .image-input [data-action=change] {
            cursor: pointer;
            position: absolute;
            right: -10px;
            top: -10px;
        }

            .image-input [data-action=change] input {
                width: 0 !important;
                height: 0 !important;
                overflow: hidden;
                opacity: 0;
            }

        .image-input [data-action=cancel],
        .image-input [data-action=remove] {
            position: absolute;
            right: -10px;
            bottom: -5px;
        }

        .image-input [data-action=cancel] {
            display: none;
        }

        .image-input.image-input-changed [data-action=cancel] {
            display: -webkit-box;
            display: -ms-flexbox;
            display: flex;
        }

        .image-input.image-input-changed [data-action=remove] {
            display: none;
        }

        .image-input.image-input-empty [data-action=remove],
        .image-input.image-input-empty [data-action=cancel] {
            display: none;
        }

        .image-input.image-input-circle {
            border-radius: 50%;
        }

            .image-input.image-input-circle .image-input-wrapper {
                border-radius: 50%;
            }

            .image-input.image-input-circle [data-action=change] {
                right: 5px;
                top: 5px;
            }

            .image-input.image-input-circle [data-action=cancel],
            .image-input.image-input-circle [data-action=remove] {
                right: 5px;
                bottom: 5px;
            }

        .image-input.image-input-outline .image-input-wrapper {
            border: 3px solid #FFFFFF;
            -webkit-box-shadow: 0 0.5rem 1.5rem 0.5rem rgba(0, 0, 0, 0.075);
            box-shadow: 0 0.5rem 1.5rem 0.5rem rgba(0, 0, 0, 0.075);
        }
</style>
<div class="container">

    <div class="image-input image-input-empty image-input-outline">
        <img src="~/images/54404339-542f-4572-9dce-396406ec43f5_Screenshot.png" id="account-upload-img" class="image-input-wrapper" alt="profile image" />

        <label class="btn btn-xs btn-icon btn-circle btn-white btn-hover-text-primary btn-shadow" data-action="change" data-toggle="tooltip" title="" data-original-title="Change avatar">
            <i class="fa fa-pen icon-sm text-muted"></i>
            <input type="file" id="ProfileImage" hidden accept="image/*" />
        </label>
        <span class="btn btn-xs btn-icon btn-circle btn-white btn-hover-text-primary btn-shadow" data-action="remove" data-toggle="tooltip" title="Remove avatar">
            <i class="ki ki-bold-close icon-xs text-muted"></i>
        </span>
    </div>
    <h2>Logo Images</h2>
    <div class="row p-4">
        <button class="btn btn-primary btn-sm w-auto" onclick="getRequest()">Add Logo</button>
    </div>
    <table class="sportesTbl table table-striped table-dark">
        <thead>
            <tr>
                <th>S NO.</th>
                <th>Image</th>
                <th>ACTION</th>
                <th></th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @if (Model != null)
            {
                int i = 1;
                foreach (var item in Model)
                {
                    <tr>
                        <th scope="row">@i</th>
                        <td><img style="height:50px; width:100px;" src="../@item.FilePath" /></td>
                        @if (item.Status == true)
                        {
                            <td id="Status_@item.Id" style="color:lawngreen;">
                                <a onclick="statusChange(@item.Id,false)">Active</a>
                            </td>
                        }
                        else
                        {
                            <td style="color:orangered;">
                                <a onclick="statusChange(@item.Id,true)">DeActive</a>
                            </td>
                        }

                        <td>
                            <a onclick="getRequest(@item.Id)" class="Edit"><i class="fa fa-edit"></i></a>
                        </td>
                        <td>
                            <a onclick="deleteRequest(@item.Id)"><i class="fa fa-trash"></i></a>
                        </td>
                    </tr>
                    i++;
                }
            }
        </tbody>
    </table>
</div>

<div class="all-modals">
    <div class="modal fade" id="registerModal" tabindex="-1" role="dialog" aria-labelledby="registerModal" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered" role="document">
            <div class="modal-content">
                <form id="request-form" autocomplete="off" class="" method="post">
                    <div class="modal-header">
                        <h5 class="modal-title" id="exampleModalLongTitle">Logo Image</h5>
                        <button type="button" class="close" onclick="closeModel();">
                            ×
                        </button>
                    </div>
                    <div class="modal-body">
                        <div class="form-horizontal">
                            <div class="error" style="display:none;" id="error"></div>
                            <div class="form-group d-flex justify-content-between align-items-center mb-75">
                                <label class="control-label col-md-4" style="color:black !important;">Select Image</label>
                                <div class="col-md-8">
                                    <input type="file" id="inputFiles" name="file" />
                                </div>
                            </div>
                            <div class="form-group d-flex justify-content-between align-items-center mb-75">
                                <div class="form-group d-flex justify-content-between align-items-center mb-75">
                                    <div class="col-md-12">
                                        <input type="checkbox" id="Status" />
                                        <label class="form-label">Status</label>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="modal-footer">
                        <button type="button" id="cancle" class="btn btn-light" onclick="closeModel();">Cancel</button>
                        <button type="button" id="btn-save" class="btn btn-primary font-weight-bold" onclick="return saveRequest()">Save</button>
                    </div>


                </form>
            </div>
        </div>
    </div>
</div>


@section PageJs{
    <script src="~/js/custom.js"></script>
    <script type="text/javascript">
        $(document).ready(function () {
            var accountUploadImg = $('#account-upload-img');
            var accountUploadBtn = $('#ProfileImage');

            // Update user photo on click of button
            if (accountUploadBtn) {
                accountUploadBtn.on('change', function (e) {
                    var reader = new FileReader(),
                        files = e.target.files;
                    reader.onload = function () {
                        if (accountUploadImg) {
                            accountUploadImg.attr('src', reader.result);
                        }
                    };
                    reader.readAsDataURL(files[0]);
                });
            }
            // Reset Photo
            $(".resetBtn").click(function () {
                accountUploadImg.attr('src', '');
            });
        });

        function getRequest() {
            $('#registerModal').modal('show');
        }

        function closeModel() {
            $('#registerModal').modal('hide');
        }

        function saveRequest() {
            let formdata = new FormData();
            let fileList = document.getElementById("inputFiles").files;
            if (fileList.length > 0) {
                for (const file of fileList) {
                    formdata.append(file.name, file);
                }
                formdata.append("Status", $("#Status").prop("checked"));
                let uploadAttachmentJson = {
                    apiUrl: "@Url.Action("AddUpdatedLogoImages", "OtherSetting")",
                    postData: formdata
                }
                $(".loader").show();
                promiseAjaxPost.call(uploadAttachmentJson, false).then(
                    (res) => {
                        $(".loader").hide();
                        if (res.IsSuccess && res.Status == 200) {
                            messagePopup.responseSuccess(res.Message).then(
                                (r) => { if (r == true) { location.reload() } }
                            )
                        } else {
                            messagePopup.responseError(res.Message);
                        }
                    },
                    (err) => {
                        messagePopup.error(err.statusText);
                    }
                )
            }
        }

        function deleteRequest(id) {
            const formData = new FormData();
            formData.append("id", id);

            let addRequestJson = {
                apiUrl: "@Url.Action("DeleteLogo", "OtherSetting")",
                postData: formData
            }
            $(".loader").show();
            promiseAjaxPost.call(addRequestJson, false).then(
                (res) => {
                    $(".loader").hide();
                    if (res.IsSuccess && res.Status == 200) {
                        messagePopup.responseSuccess(res.Message).then(
                            (r) => { if (r == true) { location.reload(); } }
                        )
                    } else if (res.IsSuccess && res.Status == 208) {
                        messagePopup.responseWarning(res.Message);
                    } else {
                        messagePopup.responseError(res.Message);
                    }
                },
                (err) => {
                    messagePopup.error(err.statusText);
                }
            )
            return false;
        }

        function statusChange(id, status) {
            if (id == null || id == 0) {
                return false;
            }
            const formData = new FormData();
            formData.append("id", id);
             formData.append("status", status);
             formData.append("api", 1);

            let addRequestJson = {
                apiUrl: "@Url.Action("ChangeStatus", "OtherSetting")",
                postData: formData
            }
            $(".loader").show();
            promiseAjaxPost.call(addRequestJson, false).then(
                (res) => {
                    $(".loader").hide();
                    if (res.IsSuccess && res.Status == 200) {
                        messagePopup.responseSuccess(res.Message).then(
                            (r) => { if (r == true) { location.reload(); } }
                        )
                    } else if (res.IsSuccess && res.Status == 208) {
                        messagePopup.responseWarning(res.Message);
                    } else {
                        messagePopup.responseError(res.Message);
                    }
                },
                (err) => {
                    messagePopup.error(err.statusText);
                }
            )
            return false;
        }

    </script>
}


